m hiz
c
3
2
x
rm bp2wire.bp
# sle4442-cast
m 2wire # m 2wire - enter 2wire mode
20 # Set speed to 20kHz
W 5 # W 5 - Enable 5 volt power supply
P # P - enable pull-up resistors
L # L - set Least Significant Bit first
} { ^ }  r:4 # Send SLE4442 ATR command and read 4 bytes
sle4442 # sle4442 - Use sle4442 command to decode the ATR response
[ 0x30 0x00 0x00 ] r:256 # Read all 256 bytes of the card
[ 0x31 0x00 0x00 ] r:4 # Read remaining unlock attempts
= 0x07 # Convert the remaining attempts to decimal
[ 0x39 0x00 0b110 ] ^:1000 # Select an unlock attempt
[0x33 0x01 0xff] ^:1000 # Write default passcode byte 1
[0x33 0x02 0xff] ^:1000 # Write default passcode byte 2
[0x33 0x03 0xff] ^:1000 # Write default passcode byte 3
[0x39 0x00 0xff] ^:1000 # Reset the unlock attempt counter
[0x31 0x00 0x00] r:4 # Verify the card is unlocked
[0x38 255 0x55 ] ^:1000 # Write 0x55 to address 255
[0x30 0 0] r:256 # Verify last byte is now 0x55
[0x39 0x01 0x12] ^:1000 # Set new passcode byte 1
[0x39 0x02 0x34] ^:1000 # Set new passcode byte 2
[0x39 0x03 0x56] ^:1000 # Set new passcode byte 3
[0x31 0x00 0x00] r:4 # Verify new passcode
# stop
sle4442 write -a 0xff -v 0xff
sle4442 psc -p 0x123456 -n 0xffffff
m hiz
rm bp2wire.bp
# sle4442-command-cast
m 2wire # m 2wire - enter 2wire mode
20 # Set speed to 20kHz
W 5 # W 5 - Enable 5 volt power supply
P # P - enable pull-up resistors
L # L - set Least Significant Bit first
sle4442 init # Initialize the SLE4442 card, read ATR
sle4442 dump # Dump the card contents
sle4442 dump -s 0x02 -b 20 # Dump starting from address 0x02, 20 bytes
sle4442 unlock -p 0xffffff # Unlock the card with the default passcode
sle4442 write -a 0xff -v 0x88 # Write 0x88 to address 0xff
sle4442 psc -p 0xffffff -n 0x123456 # Set new passcode
# stop
sle4442 write -a 0xff -v 0xff
sle4442 psc -p 0x123456 -n 0xffffff